image: node:latest

stages:
  - backendTest
  - frontendTest
  - frontendLint
  - badges
  - pages

backendTest:
  stage: backendTest
  script:
    - cd backend/
    - npm i
    - npm run test > $CI_PROJECT_DIR/backendTest_coverage_report.txt 2> $CI_PROJECT_DIR/backendTest_report.txt
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - backendTest_report.txt
      - backendTest_coverage_report.txt
      - backend/coverage/lcov-report/
  allow_failure: true

frontendTest:
    stage: frontendTest
    tags:
        - docker  # Comme on utilise une image pour isoler on doit utiliser un runner docker 
    image: cypress/base:16.18.1 # Image fournie par cypress avec ce qu'il faut
    script:
        - cd backend/
        - npm i
        - npm run start &
        - cd ../frontend/
        - npm i # Installe ce qui est décrit dans package.json
        - VITE_TEST=1 npm run dev &
        - npx cypress run > $CI_PROJECT_DIR/frontendTest_report.txt # Lance les tests
        - npx nyc report --reporter=text-summary > $CI_PROJECT_DIR/frontendTest_coverage_report.txt # Récupère le coverage
    #    - kill -9 $(ps | grep node | awk '{print $1}') # Cette ligne pourrait permettre de tuer serve
    artifacts:
        when: always
        paths:
            - frontendTest_coverage_report.txt # mise à disposition du coverage
            - frontendTest_report.txt # mise a disposition du compte rendu
            - frontend/coverage/lcov-report/ # mise a disposition de la couverture de code
    allow_failure: true

# Vérification de code
frontendLint:
    stage: frontendLint
    allow_failure: true
    script:
      - cd frontend/
      - npm i
      # Run eslint
      - npm run lint > $CI_PROJECT_DIR/frontend_lint_report.txt
    artifacts:
        when: always
        paths:
            - frontend_lint_report.txt # mise a disposition du compte rendu

badges:
  stage: badges
  image: python
  script:
    - pip install anybadge
    - ./backend_badge.sh
    - ./frontend_badge.sh
    - ./frontend_lint.sh # lancement du script générant le badge lint
  artifacts:
    paths:
      - backend_test.svg
      - backend_coverage_test.svg
      - frontend_test.svg
      - frontend_coverage_test.svg
      - frontend_lint.svg
    
pages:
  stage: pages
  script:
    - mkdir -p public
    - mkdir -p public/backend
    - mkdir -p public/frontend
    - cp -r backend/coverage/lcov-report/* public/backend
    - cp -r frontend/coverage/lcov-report/* public/frontend
  artifacts:
    paths:
      - public
